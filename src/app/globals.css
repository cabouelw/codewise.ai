@import "tailwindcss";

/* Custom CSS Variables for Theme */
:root {
  --background: 248 250 252;
  /* slate-50 */
  --foreground: 15 23 42;
  /* slate-900 */
  --primary: 14 165 233;
  /* sky-500 */
  --primary-foreground: 248 250 252;
  /* slate-50 */
  --muted: 241 245 249;
  /* slate-100 */
  --muted-foreground: 100 116 139;
  /* slate-500 */
  --border: 226 232 240;
  /* slate-200 */
  --ring: 14 165 233;
  /* sky-500 */

  /* Toast notifications */
  --toast-bg: #ffffff;
  --toast-color: #1e293b;
  --toast-border: #e2e8f0;
}

.dark {
  --background: 15 23 42;
  /* slate-900 */
  --foreground: 248 250 252;
  /* slate-50 */
  --primary: 14 165 233;
  /* sky-500 */
  --primary-foreground: 15 23 42;

  /* Toast notifications */
  --toast-bg: #1e293b;
  --toast-color: #f8fafc;
  --toast-border: #475569;
  /* slate-900 */
  --muted: 30 41 59;
  /* slate-800 */
  --muted-foreground: 148 163 184;
  /* slate-400 */
  --border: 51 65 85;
  /* slate-700 */
  --ring: 14 165 233;
  /* sky-500 */
}

/* Global Styles */
* {
  border-color: hsl(var(--border));
}

html {
  scroll-behavior: smooth;
}

body {
  color: hsl(var(--foreground));
  background: hsl(var(--background));
  font-feature-settings: "rlig" 1, "calt" 1;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: hsl(var(--muted));
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--primary));
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary) / 0.8);
}

/* Selection */
::selection {
  background-color: hsl(var(--primary) / 0.2);
  color: hsl(var(--foreground));
}

/* Focus styles */
.focus-ring {
  outline: none;
  box-shadow: 0 0 0 2px hsl(var(--primary));
  border-radius: 0.375rem;
}

/* Button hover glow effect */
.btn-glow {
  transition: all 0.3s ease;
}

.btn-glow:hover {
  box-shadow: 0 0 20px hsl(var(--primary) / 0.5);
  transform: translateY(-1px);
}

/* Gradient text */
.gradient-text {
  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary) / 0.7));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Loading animation */
.loading-dots {
  animation: loading 1.4s infinite ease-in-out;
}

.loading-dots:nth-child(1) {
  animation-delay: -0.32s;
}

.loading-dots:nth-child(2) {
  animation-delay: -0.16s;
}

@keyframes loading {

  0%,
  80%,
  100% {
    transform: scale(0);
  }

  40% {
    transform: scale(1);
  }
}

/* Floating animation for hero elements */
@keyframes float {

  0%,
  100% {
    transform: translateY(0px);
  }

  50% {
    transform: translateY(-20px);
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

/* Fade in animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes shimmer {
  from {
    transform: translateX(-200%) skewX(-12deg);
  }

  to {
    transform: translateX(200%) skewX(-12deg);
  }
}

/* Animation classes */
.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
}

.animate-fade-in-down {
  animation: fadeInDown 0.6s ease-out forwards;
}

.animate-fade-in-left {
  animation: fadeInLeft 0.6s ease-out forwards;
}

.animate-fade-in-right {
  animation: fadeInRight 0.6s ease-out forwards;
}

.animate-scale-in {
  animation: scaleIn 0.5s ease-out forwards;
}

.animate-shimmer {
  animation: shimmer 2s ease-in-out infinite;
}

/* Stagger animation delays */
.animate-delay-100 {
  animation-delay: 0.1s;
}

.animate-delay-200 {
  animation-delay: 0.2s;
}

.animate-delay-300 {
  animation-delay: 0.3s;
}

.animate-delay-400 {
  animation-delay: 0.4s;
}

.animate-delay-500 {
  animation-delay: 0.5s;
}

/* Initial state for animations */
.animate-on-scroll {
  opacity: 0;
}

/* Hover effects for cards */
.card-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-hover:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.card-hover:hover .card-icon {
  transform: scale(1.1) rotate(5deg);
}

.card-icon {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Hero background pattern */
.hero-bg {
  background-image: radial-gradient(circle at 25px 25px, hsl(var(--primary) / 0.2) 2px, transparent 0),
    radial-gradient(circle at 75px 75px, hsl(var(--primary) / 0.1) 2px, transparent 0);
  background-size: 100px 100px;
}

/* Blur backdrop */
.blur-bg {
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}

/* Mobile safe area */
@supports (padding: max(0px)) {
  .safe-area-top {
    padding-top: max(1rem, env(safe-area-inset-top));
  }

  .safe-area-bottom {
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Add after the existing animations */

/* Smooth scroll behavior */
html {
  scroll-behavior: smooth;
}

/* Reduced motion support for accessibility */
@media (prefers-reduced-motion: reduce) {

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .animate-float,
  .animate-pulse,
  .animate-bounce {
    animation: none !important;
  }
}

/* Performance optimizations */
.card-hover,
.btn-glow {
  will-change: transform;
}

.card-hover:hover {
  will-change: auto;
}

/* Additional hover effects */
.hover-glow {
  position: relative;
  overflow: hidden;
}

.hover-glow::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s;
}

.hover-glow:hover::before {
  left: 100%;
}

/* Smooth loading transitions */
.page-transition {
  animation: pageLoad 0.5s ease-out forwards;
}

@keyframes pageLoad {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Image loading effect */
.image-fade-in {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.image-fade-in.loaded {
  opacity: 1;
}

/* ============================================
   Prism.js Code Highlighting Theme
   ============================================ */

/* Base code block styles */
code[class*="language-"],
pre[class*="language-"] {
  color: #e4e4e7;
  background: none;
  font-family: "Fira Code", "Consolas", "Monaco", "Andale Mono", "Ubuntu Mono", monospace;
  font-size: 0.9rem;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.6;
  tab-size: 2;
  hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
  padding: 1.5rem;
  margin: 1.5rem 0;
  overflow: auto;
  border-radius: 0.75rem;
  background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.05);
  position: relative;
}

/* Add language badge */
pre[class*="language-"]::before {
  content: attr(data-language);
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.25rem 0.75rem;
  font-size: 0.75rem;
  font-weight: 600;
  color: #94a3b8;
  background: rgba(15, 23, 42, 0.8);
  border-bottom-left-radius: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Inline code */
:not(pre)>code[class*="language-"] {
  padding: 0.2em 0.4em;
  border-radius: 0.3rem;
  background: #f1f5f9;
  color: #ec4899;
  font-size: 0.875em;
  font-weight: 600;
  white-space: normal;
}

/* Scrollbar styling for code blocks */
pre[class*="language-"]::-webkit-scrollbar {
  height: 8px;
  width: 8px;
}

pre[class*="language-"]::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 10px;
}

pre[class*="language-"]::-webkit-scrollbar-thumb {
  background: rgba(148, 163, 184, 0.3);
  border-radius: 10px;
}

pre[class*="language-"]::-webkit-scrollbar-thumb:hover {
  background: rgba(148, 163, 184, 0.5);
}

/* Syntax highlighting colors */
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #64748b;
  font-style: italic;
}

.token.punctuation {
  color: #94a3b8;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #f472b6;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #86efac;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #60a5fa;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #c084fc;
}

.token.function,
.token.class-name {
  color: #fbbf24;
}

.token.regex,
.token.important,
.token.variable {
  color: #fb923c;
}

.token.important,
.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

/* Line highlighting */
.line-highlight {
  background: rgba(96, 165, 250, 0.1);
  border-left: 3px solid #60a5fa;
  position: absolute;
  left: 0;
  right: 0;
  padding-left: 1.5rem;
  margin-top: 1.5rem;
  pointer-events: none;
}

/* Line numbers */
pre[class*="language-"].line-numbers {
  position: relative;
  padding-left: 3.8em;
  counter-reset: linenumber;
}

pre[class*="language-"].line-numbers>code {
  position: relative;
  white-space: inherit;
}

.line-numbers .line-numbers-rows {
  position: absolute;
  pointer-events: none;
  top: 0;
  font-size: 100%;
  left: -3.8em;
  width: 3em;
  letter-spacing: -1px;
  border-right: 1px solid rgba(148, 163, 184, 0.2);
  user-select: none;
}

.line-numbers-rows>span {
  display: block;
  counter-increment: linenumber;
}

.line-numbers-rows>span:before {
  content: counter(linenumber);
  color: #64748b;
  display: block;
  padding-right: 0.8em;
  text-align: right;
}

/* Copy button for code blocks */
.code-block-wrapper {
  position: relative;
}

.copy-code-button {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  padding: 0.5rem 0.75rem;
  font-size: 0.75rem;
  font-weight: 600;
  color: #94a3b8;
  background: rgba(15, 23, 42, 0.8);
  border: 1px solid rgba(148, 163, 184, 0.2);
  border-radius: 0.375rem;
  cursor: pointer;
  transition: all 0.2s;
  z-index: 10;
}

.copy-code-button:hover {
  color: #e2e8f0;
  background: rgba(30, 41, 59, 0.9);
  border-color: rgba(148, 163, 184, 0.4);
}

.copy-code-button.copied {
  color: #86efac;
  border-color: #86efac;
}

/* ============================================
   Tailwind Typography Customization
   ============================================ */

.prose {
  color: #334155;
  max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  line-height: 1.75;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
  color: #475569;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: #3b82f6;
  text-decoration: underline;
  font-weight: 500;
  text-decoration-color: rgba(59, 130, 246, 0.3);
  text-underline-offset: 2px;
  transition: all 0.2s;
}

.prose :where(a):hover:not(:where([class~="not-prose"] *)) {
  color: #2563eb;
  text-decoration-color: rgba(37, 99, 235, 0.6);
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
  padding-left: 0.375em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 600;
  color: #64748b;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: #94a3b8;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  font-size: 1.875em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  border-left-width: 0.25rem;
  border-left-color: #3b82f6;
  quotes: "\201C" "\201D" "\2018" "\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
  background: #eff6ff;
  padding: 1rem 1rem 1rem 1.5rem;
  border-radius: 0.5rem;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: #ec4899;
  font-weight: 600;
  font-size: 0.875em;
  background: #fdf2f8;
  padding: 0.2em 0.4em;
  border-radius: 0.25rem;
  font-family: "Fira Code", "Consolas", "Monaco", monospace;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before,
.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.75rem;
  padding: 1.5rem;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
  border-collapse: collapse;
  border-radius: 0.5rem;
  overflow: hidden;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  background: #f1f5f9;
  border-bottom: 2px solid #cbd5e1;
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  vertical-align: bottom;
  padding: 0.75rem 1rem;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom: 1px solid #e2e8f0;
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
  padding: 0.75rem 1rem;
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: #e2e8f0;
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.75rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: #64748b;
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
  text-align: center;
  font-style: italic;
}

/* Large prose variant */
.prose-lg {
  font-size: 1.125rem;
  line-height: 1.7777778;
}

.prose-lg :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.prose-lg :where(h2):not(:where([class~="not-prose"] *)) {
  font-size: 2em;
  margin-top: 1.5555556em;
  margin-bottom: 0.8888889em;
  line-height: 1.3333333;
}

.prose-lg :where(h3):not(:where([class~="not-prose"] *)) {
  font-size: 1.6666667em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.4;
}